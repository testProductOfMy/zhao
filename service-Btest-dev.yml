server:
  port: 8013

spring:
  zipkin:
    enabled: true
    base-url: http://localhost:8011
    
 rabbitmq:
    host: 47.93.41.245
    port: 5672
    username: admin
    password: 123456
    
  sleuth:
    sampler:
    # 采样率，默认0.1即10%,如需测试时每次都看到trace则修改为1.0，但对性能有影响，注意上线时修改为合理值
        percentage: 1.0
  # stream format  to send trace msg: enable sleuth.stream to use stream
  # default is true,refer to SleuthStreamAutoConfiguration.java
  #stream:
  #  enabled: true  
    
  application:
    name: service-Btest
    
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://47.93.41.245:3306/ag_admin?useUnicode=true&characterEncoding=UTF8
    username: root
    password: root
    initial-size: 2
    min-idle: 1
    max-active: 20
    max-wait: 10
    # 配置获取连接等待超时的时间，配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
    #max-wait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    time-between-eviction-runs-millis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    min-evictable-idle-time-millis: 300000
    validationQuery: SELECT 1 FROM DUAL
    # 空闲时检测连接是否有效
    test-while-idle: true
    # 申请连接时检测连接是否有效，会降低性能
    test-on-borrow: false
    # 归还连接时检测连接是否有效，会降低性能
    test-on-return: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 50
    # 配置监控统计拦截的filters,去掉后监控界面sql无法统计,'wall'用于防火墙
    filters: stat,wall
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    
    spring.datasource.connectionProperties=druid.stat.mergeSql: true;druid.stat.slowSqlMillis=5000

jasypt:
  encryptor:
    bean: encryptorBean






    
  


mybatis:
#  type-aliases-package: com.bocins.springcloud.model #type-aliases-package
  mapper-locations: classpath:mapper/*.xml

pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

#eureka-client健康检查，必须配置在application.yml中（依赖spring-boot-starter-actuator）
#注册中心
eureka:
  instance: 
    preferIpAddress: true #在注册中心显示ip
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}        # 将Instance ID设置成IP:端口的形式
  client:
    serviceUrl:
      defaultZone: http://localhost:8010/eureka/
    healthcheck:
      enabled: true

hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 5000
        timeout:
          enabled: true

feign:
  #开启httpclient支持
  okhttp:
    enabled: true
  #Hystrix支持，如果为true，hystrix库必须在classpath中
  hystrix:
    enable: true
  #请求和响应GZIP压缩支持
  compression:
    request: 
      enabled: true
       #支持压缩的mime types
      mime-types: text/xml,application/xml,application/json
      min-request-size: 20
    response: 
      enabled: true
      
management:
  security:
    enabled: false

#沟通平台接口webService地址及邮件发送人及接受人配置
## path: http://21.8.129.150:8080
 ##   q2c: 
    #  receiverId: '006554'
    #  sender: '006554'
#queueName: policysend
